server:
  port: 8083

logging:
  level:
    com.rackspacecloud: debug
    org.springframework:
      web: info
    okhttp3: warn
spring:
  profiles:
    active: production
---
spring:
  profiles: development

server:
  port: 8083

rest-template:
  request-config:
    connection-request-timeout: 120000  # timeout when requesting a connection from the connection manager
    connect-timeout: 120000             # timeout until a connection is established
    socket-timeout: 120000              # timeout for waiting for data

  pooling-http-client-connection-manager:
    max-total: 5 # Max number of connection to pool

total-series-count.iterations: 10

cron-config: "*/10 * * * * *"

statefuleset-stats-caller-threads-count: 10

local-metrics-url: http://localhost:8086
local-metrics-database: ceres
local-metrics-rp: autogen

redis:
  hostname: localhost
  port: 6379

kubernetes:
  namespace: metrics
  statefulset-name: data-influxdb
  headless-service-name: ""

management:
  endpoints:
    web:
      exposure:
        include: "health,jolokia,metrics"
  metrics:
    tags:
      stack: "development"
      service: "scaler-service"
    export:
      influx:
        db: ceres
        uri: http://localhost:8086
        auto-create-db: true

---
spring:
  profiles: production

server:
  port: 8080

rest-template:
  request-config:
    connection-request-timeout: 120000  # timeout when requesting a connection from the connection manager
    connect-timeout: 120000             # timeout until a connection is established
    socket-timeout: 120000              # timeout for waiting for data

  pooling-http-client-connection-manager:
    max-total: 5 # Max number of connection to pool

total-series-count.iterations: 10

cron-config: "*/60 * * * * *"

statefuleset-stats-caller-threads-count: ${STATEFULSET_STATS_CALLER_THREADS_COUNT}

local-metrics-url: ${INFLUXDB_METRICS_URL}
local-metrics-database: ceres
local-metrics-rp: autogen

redis:
  hostname: ${REDIS_HOSTNAME}
  port: ${REDIS_PORT}

kubernetes:
  namespace: ${KUBERNETES_NAMESPACE}
  statefulset-name: ${KUBERNETES_STATEFULSET_NAME}
  headless-service-name: ${KUBERNETES_HEADLESS_SERVICE_NAME}

logging:
  level:
    com.rackspacecloud: debug
    org.springframework:
      web: info
    okhttp3: warn

management:
  endpoints:
    web:
      exposure:
        include: "health,jolokia,metrics"
  metrics:
    tags:
      stack: "prod"
      service: "scaler-service"
    export:
      influx:
        db: ceres
        uri: ${INFLUXDB_METRICS_URL}
        auto-create-db: true